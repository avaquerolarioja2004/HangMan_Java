/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ahorcado;

import com.github.javafaker.Faker;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.Arrays;
import javax.swing.JOptionPane;

/**
 *
 * @author Angel Vaquero Toncheva
 */
public class Ahorcado_AngelV extends javax.swing.JFrame {

    //El juego esta en ingles ya que la clase faker la mayoria de palabras estan en ingles
    //El juego ha sido diseñado para que solo tenga un JFrame para que sea sea un juego rapido de ejecutar y jugar.
    //El juego se ejecuta directamente si le doy a run en el paquete porque cambie el pom
    //Creamos las variables que usaremos en el juego y luego las definire mejor, pero las creo aquí porque las uso en todo el programa
    int puntuacion = 0, fallos = 0, ganar = 0, tamaño, tamañov2;
    //Creamos el array que contendra la palabra misteriosa separada por chars
    char[] palabramisteriosa;
    StringBuilder letrasfallidas;
    //Este string guardara la palabra secreta normal
    String palabrasecreta;
    //Generamos el array de srtrings que contendra la palabra ofuscada con barra baja y un espacio
    String[] guiones;
    //Respuesta lo usamos como variable para saber si el usuario quiere volver a jugar la explico mas abajo
    int respuesta;
    //Creamos la variable imagen para definirla como icono de la ventana del juego
    Image im7 = Toolkit.getDefaultToolkit().getImage("src/main/resources/PRG_Ahorcado7.png");

    /**
     * Creates new form Ahorcado_AngelV
     */
    public Ahorcado_AngelV() {
        //Definimos el icono para la ventana del juego
        this.setIconImage(im7);
        //Se inician los componentes del juego
        initComponents();
        //Esto hace que la ventana salga centrada
        this.setLocationRelativeTo(null);
        //Esto cambia el color del fondo juego a rosa que es más agradable a la vista
        this.getContentPane().setBackground(Color.PINK);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        Texto3 = new javax.swing.JLabel();
        PalabraSecreta = new javax.swing.JLabel();
        Imagen = new javax.swing.JLabel();
        BotonPalabra = new javax.swing.JButton();
        BotonInstrucciones = new javax.swing.JButton();
        A = new javax.swing.JButton();
        Texto1 = new javax.swing.JLabel();
        LetrasFallidas = new javax.swing.JLabel();
        TextoPuntuacion = new javax.swing.JLabel();
        Puntuacion = new javax.swing.JLabel();
        Texto4 = new javax.swing.JLabel();
        CategoriaPalabra = new javax.swing.JLabel();
        B = new javax.swing.JButton();
        C = new javax.swing.JButton();
        D = new javax.swing.JButton();
        E = new javax.swing.JButton();
        F = new javax.swing.JButton();
        G = new javax.swing.JButton();
        H = new javax.swing.JButton();
        I = new javax.swing.JButton();
        J = new javax.swing.JButton();
        K = new javax.swing.JButton();
        L = new javax.swing.JButton();
        M = new javax.swing.JButton();
        N = new javax.swing.JButton();
        O = new javax.swing.JButton();
        P = new javax.swing.JButton();
        U = new javax.swing.JButton();
        Q = new javax.swing.JButton();
        T = new javax.swing.JButton();
        S = new javax.swing.JButton();
        Y = new javax.swing.JButton();
        V = new javax.swing.JButton();
        R = new javax.swing.JButton();
        X = new javax.swing.JButton();
        Z = new javax.swing.JButton();
        W = new javax.swing.JButton();
        BotonResolver = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Texto3.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        Texto3.setText("SECRET WORD:");

        PalabraSecreta.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado.png"))); // NOI18N

        BotonPalabra.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        BotonPalabra.setText("START GAME");
        BotonPalabra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonPalabraActionPerformed(evt);
            }
        });

        BotonInstrucciones.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        BotonInstrucciones.setText("INSTRUCCTIONS");
        BotonInstrucciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonInstruccionesActionPerformed(evt);
            }
        });

        A.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        A.setText("A");
        A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AActionPerformed(evt);
            }
        });

        Texto1.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        Texto1.setText("FAILED LETTERS:");

        LetrasFallidas.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N

        TextoPuntuacion.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        TextoPuntuacion.setText("PUNTUATION:");

        Puntuacion.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N

        Texto4.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        Texto4.setText("CATEGORY:");

        CategoriaPalabra.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        B.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        B.setText("B");
        B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BActionPerformed(evt);
            }
        });

        C.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        C.setText("C");
        C.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CActionPerformed(evt);
            }
        });

        D.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        D.setText("D");
        D.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DActionPerformed(evt);
            }
        });

        E.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        E.setText("E");
        E.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EActionPerformed(evt);
            }
        });

        F.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        F.setText("F");
        F.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FActionPerformed(evt);
            }
        });

        G.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        G.setText("G");
        G.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GActionPerformed(evt);
            }
        });

        H.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        H.setText("H");
        H.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HActionPerformed(evt);
            }
        });

        I.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        I.setText("I");
        I.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IActionPerformed(evt);
            }
        });

        J.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        J.setText("J");
        J.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JActionPerformed(evt);
            }
        });

        K.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        K.setText("K");
        K.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KActionPerformed(evt);
            }
        });

        L.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        L.setText("L");
        L.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LActionPerformed(evt);
            }
        });

        M.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        M.setText("M");
        M.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MActionPerformed(evt);
            }
        });

        N.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        N.setText("N");
        N.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NActionPerformed(evt);
            }
        });

        O.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        O.setText("O");
        O.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OActionPerformed(evt);
            }
        });

        P.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        P.setText("P");
        P.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PActionPerformed(evt);
            }
        });

        U.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        U.setText("U");
        U.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UActionPerformed(evt);
            }
        });

        Q.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        Q.setText("Q");
        Q.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QActionPerformed(evt);
            }
        });

        T.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        T.setText("T");
        T.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TActionPerformed(evt);
            }
        });

        S.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        S.setText("S");
        S.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SActionPerformed(evt);
            }
        });

        Y.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        Y.setText("Y");
        Y.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YActionPerformed(evt);
            }
        });

        V.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        V.setText("V");
        V.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VActionPerformed(evt);
            }
        });

        R.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        R.setText("R");
        R.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RActionPerformed(evt);
            }
        });

        X.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        X.setText("X");
        X.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XActionPerformed(evt);
            }
        });

        Z.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        Z.setText("Z");
        Z.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZActionPerformed(evt);
            }
        });

        W.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        W.setText("W");
        W.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WActionPerformed(evt);
            }
        });

        BotonResolver.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        BotonResolver.setText("SOLVE");
        BotonResolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonResolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Y, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Z, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Q, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(R, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(S, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(T, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(U, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(V, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(W, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(X, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Texto1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LetrasFallidas, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(I, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(J, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(K, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(L, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(M, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(N, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(O, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(P, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(A, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(BotonPalabra, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(BotonInstrucciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(B, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(C, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(D, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(E, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(F, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(G, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(H, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(BotonResolver, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(58, 58, 58)))))))
                        .addGap(34, 34, 34)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Texto4)
                        .addGap(18, 18, 18)
                        .addComponent(CategoriaPalabra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Texto3)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(TextoPuntuacion)
                                        .addGap(35, 35, 35)
                                        .addComponent(Puntuacion, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(Imagen, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 213, Short.MAX_VALUE))
                            .addComponent(PalabraSecreta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(52, 52, 52))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BotonPalabra, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BotonInstrucciones, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BotonResolver, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(A)
                            .addComponent(B)
                            .addComponent(C)
                            .addComponent(D)
                            .addComponent(E)
                            .addComponent(F)
                            .addComponent(G)
                            .addComponent(H))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(I)
                            .addComponent(J)
                            .addComponent(K)
                            .addComponent(L)
                            .addComponent(M)
                            .addComponent(N)
                            .addComponent(O)
                            .addComponent(P))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Q)
                            .addComponent(R)
                            .addComponent(S)
                            .addComponent(T)
                            .addComponent(U)
                            .addComponent(V)
                            .addComponent(X)
                            .addComponent(W))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Z)
                            .addComponent(Y))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Texto1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LetrasFallidas, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Texto4)
                            .addComponent(CategoriaPalabra, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PalabraSecreta, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Texto3))
                        .addGap(18, 18, 18)
                        .addComponent(Imagen, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TextoPuntuacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Puntuacion, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //Este boton su cometido es inicializar todo para que el juego sea funcional
    private void BotonPalabraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonPalabraActionPerformed
        // TODO add your handling code here:
        //Al darle al boton por primera vez queria que me cambiara el texto a generar otra palabra en vez iniciar juego
        BotonPalabra.setText("GENERATE ANOTHER WORD");
        //Genero un math.randome para darle ese toque de aleatorio al juego
        int i = (int) (Math.random() * (8) + 1);
        //Esta variable es para llevar la cuenta de fallos que si llega a 6 se pierde el juego
        fallos = 0;
        //Esta otra variable es para llevar la letras que acerto para saber si gana el juego, luego se explica mejor
        ganar = 0;
        //Inicializa la imagen del ahorcado
        Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado.png")));
        //Genero un sb para poner las letras fallidas y lo añado al label para inicializarlo
        letrasfallidas = new StringBuilder("");
        LetrasFallidas.setText(letrasfallidas + "");
        //Iniciamos las variables de puntuacion, la misma palabra y el tamaño de la misma
        puntuacion = 0;
        palabrasecreta = "";
        tamaño = 0;
        Puntuacion.setText(puntuacion + "");
        //Creamos la clase faker con nombre de "palabra" que usamos luego
        Faker palabra = new Faker();

        // Inicializa los botones a true para siguientes partidas
        A.setEnabled(true);
        B.setEnabled(true);
        C.setEnabled(true);
        D.setEnabled(true);
        E.setEnabled(true);
        F.setEnabled(true);
        G.setEnabled(true);
        H.setEnabled(true);
        I.setEnabled(true);
        J.setEnabled(true);
        K.setEnabled(true);
        L.setEnabled(true);
        M.setEnabled(true);
        N.setEnabled(true);
        O.setEnabled(true);
        P.setEnabled(true);
        Q.setEnabled(true);
        R.setEnabled(true);
        S.setEnabled(true);
        T.setEnabled(true);
        U.setEnabled(true);
        V.setEnabled(true);
        W.setEnabled(true);
        X.setEnabled(true);
        Y.setEnabled(true);
        Z.setEnabled(true);
        //Usamos el math.randome aqui para que me seleccione una categoria y en esa categoria me genere una palabra misteriosa
        switch (i) {
            case 1:
                //Me añade al label de categoria la categoria designada
                CategoriaPalabra.setText("ANIMAL NAME");
                //Me genera la palabra misteriosa con el faker y la pasa a mayusculas para que se hagan bien las comparaciones y para que luego se vea estetico
                palabrasecreta = (palabra.animal().name().toUpperCase());
                //Definimos el tamaño de la palabra normal
                tamaño = palabrasecreta.length();
                //Definimos el tamaño de la palabra pero sin espacios por si el faker genera alguna asi el juego no se rompa
                tamañov2 = palabrasecreta.replaceAll(" ", "").length();
                //Ahora gracias a tamaño definimos el tamaño del array de guiones y el de la palabra secreta normal
                guiones = new String[tamaño];
                palabramisteriosa = new char[tamaño];
                //Mediante este bucle rellenamos el array de guines con quiones y espacios si es el caso
                for (int x = 0; x < palabrasecreta.length(); x++) {
                    //Guardamos en el array de palabramisteriosa la palabra pero por chars
                    palabramisteriosa[x] = (palabrasecreta.charAt(x));
                    //Este es el if que define si el caracter es espacio para el array de guiones y si lo es guarda en el array un doble espacio si no guarda guin bajo y espacio
                    if (palabramisteriosa[x] == ' ') {
                        guiones[x] = ("  ");
                    } else {
                        guiones[x] = ("_ ");
                    }
                }
                //Y aqui le ponemos al label el array de guiones
                PalabraSecreta.setText(Arrays.toString(guiones));
                break;
            //El resto funciona con la misma logica pero con palabras distintas
            case 2:
                CategoriaPalabra.setText("BOOK NAME");
                palabrasecreta = (palabra.book().title().toUpperCase());
                tamañov2 = palabrasecreta.replaceAll(" ", "").length();
                tamaño = palabrasecreta.length();
                guiones = new String[tamaño];
                palabramisteriosa = new char[tamaño];
                for (int x = 0; x < palabrasecreta.length(); x++) {
                    palabramisteriosa[x] = (palabrasecreta.charAt(x));
                    if (palabramisteriosa[x] == ' ') {
                        guiones[x] = ("  ");
                    } else {
                        guiones[x] = ("_ ");
                    }
                }
                PalabraSecreta.setText(Arrays.toString(guiones));
                break;
            case 3:
                CategoriaPalabra.setText("COLOR");
                palabrasecreta = (palabra.color().name().toUpperCase());
                tamaño = palabrasecreta.length();
                tamañov2 = palabrasecreta.replaceAll(" ", "").length();
                guiones = new String[tamaño];
                palabramisteriosa = new char[tamaño];
                for (int x = 0; x < palabrasecreta.length(); x++) {
                    palabramisteriosa[x] = (palabrasecreta.charAt(x));
                    if (palabramisteriosa[x] == ' ') {
                        guiones[x] = ("  ");
                    } else {
                        guiones[x] = ("_ ");
                    }
                }
                PalabraSecreta.setText(Arrays.toString(guiones));
                break;
            case 4:
                CategoriaPalabra.setText("MUSIC GENRE");
                palabrasecreta = (palabra.music().genre().toUpperCase());
                tamaño = palabrasecreta.length();
                tamañov2 = palabrasecreta.replaceAll(" ", "").length();
                guiones = new String[tamaño];
                palabramisteriosa = new char[tamaño];
                for (int x = 0; x < palabrasecreta.length(); x++) {
                    palabramisteriosa[x] = (palabrasecreta.charAt(x));
                    if (palabramisteriosa[x] == ' ') {
                        guiones[x] = ("  ");
                    } else {
                        guiones[x] = ("_ ");
                    }
                }
                PalabraSecreta.setText(Arrays.toString(guiones));
                break;
            case 5:
                CategoriaPalabra.setText("SUPERHERO NAME");
                palabrasecreta = (palabra.superhero().name().toUpperCase());
                tamaño = palabrasecreta.length();
                tamañov2 = palabrasecreta.replaceAll(" ", "").length();
                guiones = new String[tamaño];
                palabramisteriosa = new char[tamaño];
                for (int x = 0; x < palabrasecreta.length(); x++) {
                    palabramisteriosa[x] = (palabrasecreta.charAt(x));
                    if (palabramisteriosa[x] == ' ') {
                        guiones[x] = ("  ");
                    } else {
                        guiones[x] = ("_ ");
                    }
                }
                PalabraSecreta.setText(Arrays.toString(guiones));
                break;
            case 6:
                CategoriaPalabra.setText("HARRY POTTER CHARACTER");
                palabrasecreta = (palabra.harryPotter().character().toUpperCase());
                tamaño = palabrasecreta.length();
                tamañov2 = palabrasecreta.replaceAll(" ", "").length();
                guiones = new String[tamaño];
                palabramisteriosa = new char[tamaño];
                for (int x = 0; x < palabrasecreta.length(); x++) {
                    palabramisteriosa[x] = (palabrasecreta.charAt(x));
                    if (palabramisteriosa[x] == ' ') {
                        guiones[x] = ("  ");
                    } else {
                        guiones[x] = ("_ ");
                    }
                }
                PalabraSecreta.setText(Arrays.toString(guiones));
                break;
            case 7:
                CategoriaPalabra.setText("FRUIT NAME");
                palabrasecreta = (palabra.food().fruit().toUpperCase());
                tamaño = palabrasecreta.length();
                tamañov2 = palabrasecreta.replaceAll(" ", "").length();
                guiones = new String[tamaño];
                palabramisteriosa = new char[tamaño];
                for (int x = 0; x < palabrasecreta.length(); x++) {
                    palabramisteriosa[x] = (palabrasecreta.charAt(x));
                    if (palabramisteriosa[x] == ' ') {
                        guiones[x] = ("  ");
                    } else {
                        guiones[x] = ("_ ");
                    }
                }
                PalabraSecreta.setText(Arrays.toString(guiones));
                break;
            case 8:
                CategoriaPalabra.setText("ARTIST NAME");
                palabrasecreta = (palabra.artist().name().toUpperCase());
                tamaño = palabrasecreta.length();
                tamañov2 = palabrasecreta.replaceAll(" ", "").length();
                guiones = new String[tamaño];
                palabramisteriosa = new char[tamaño];
                for (int x = 0; x < palabrasecreta.length(); x++) {
                    palabramisteriosa[x] = (palabrasecreta.charAt(x));
                    if (palabramisteriosa[x] == ' ') {
                        guiones[x] = ("  ");
                    } else {
                        guiones[x] = ("_ ");
                    }
                }
                PalabraSecreta.setText(Arrays.toString(guiones));
                break;
        }
    }//GEN-LAST:event_BotonPalabraActionPerformed
    //Este es el boton que te dira las instrucciones del juego
    private void BotonInstruccionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonInstruccionesActionPerformed
        // TODO add your handling code here:
        //El funcionamiento del swing es raro para los label si necesitas hacer un salto de linea no es como los sout(\n), aqui se define como tml y se usa el salto de html
        JOptionPane.showMessageDialog(null, "FOR START PLAYING PRESS START BUTTON\nYou only have 6 trys for solving the word\nIf you press SOLVE Botton and you type the wrong answer you lose\nFor each correct leatter +1 point\nFor each incorrect leatter -3 points", "INSTRUCCTIONS", JOptionPane.PLAIN_MESSAGE);

    }//GEN-LAST:event_BotonInstruccionesActionPerformed
    //Boton apara comprobar la letra 'A'
    private void AActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AActionPerformed
        // TODO add your handling code here:
        //Desactivamos el boton
        A.setEnabled(false);
        //Generamos el bucle que da tantas vueltas como sea el tamaño de la palabra secreta con espacios
        for (int i = 0; i < tamaño; i++) {
            //Comprueba si en el array de chars de antes su contenido es igual al char 'A'
            if (palabramisteriosa[i] == 'A') {
                //Si es asi a la posicion del array guiones que sea igual al char se le asigna el mismo char
                guiones[i] = "A";
                //Se le vuelve a pasar el mismo array pero ahora ya estan añadidas las letras que corresponden a su posicion al label
                PalabraSecreta.setText(Arrays.toString(guiones));
                //Por cada letras que corresponda se le suma un punto a la variable ganar
                ganar++;
            }

        }
        //Este otro if lo que comprueba es si la letra esta en la palabra para restar o sumar solo una vez puntos
        if (palabrasecreta.contains("A")) {
            //Si la letra esta suma puntos
            puntuacion++;
            Puntuacion.setText(puntuacion + "");
            //Ahora comprueba si la variable de ganar de arriba es igual a tamañov2 que es el tamaño sin espacios
            if (ganar == tamañov2) {
                //Si lo es cierra la ventana del juego, para ahorrar memoria que se gasta si solo la hago invisible
                this.dispose();
                //Ahora es cuando se usa la variable de arriba para saber si el usuario quiere seguir jugando, si es que si la respuesta=0, si es que no la respuesta=1
                //Esta pregunta se genera como la del boton de instrucciones(JOptionPane) pero ahora en vez de informacion es YES_NO_OPTION, que es para hacer encuestas
                respuesta = (JOptionPane.showConfirmDialog(null, "YOU WIN, PLAY AGAIN?", "YOU WIN, YOU WIN, PLAY AGAIN?", JOptionPane.YES_NO_OPTION));
                if (respuesta == 0) {
                    //Si el usuario quiere seguir jugando genera desde 0 otra vez la pestaña de jugar
                    new Ahorcado_AngelV().setVisible(true);
                } else {
                    //Si no pues se cierra el programa
                    System.exit(0);
                }

            }
            //Ahora viene el caso de si la palabra no contiene la letra deseada
        } else {
            //Me resta tres puntos, me añade un fallo, y al sb de letras fallidas le añade la letra fallida
            puntuacion -= 3;
            fallos++;
            letrasfallidas.append("A");
            LetrasFallidas.setText(letrasfallidas + "");
            Puntuacion.setText(puntuacion + "");
            //Ahora llega al switch de fallos que su funcion es la de cambiar la imagen del ahorcado
            switch (fallos) {
                case 1 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado2.png")));
                case 2 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado3.png")));
                case 3 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado4.png")));
                case 4 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado5.png")));
                case 5 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado6.png")));
                case 6 -> {
                    //Cuando llega a 6 fallos me cierra la ventana de jugar y al igual que al ganar me sale el cuadro de la pregunta, pero esta vez en el titulo le añade la palabra que era, para que el usuario la vea
                    this.dispose();
                    respuesta = (JOptionPane.showConfirmDialog(null, "LOOSER\nPLAY AGAIN?", "THE WORD WAS: " + palabrasecreta, JOptionPane.YES_NO_OPTION));
                    if (respuesta == 0) {
                        //Si el usuario quiere jugar pues genera otra vez el juego, si no cierra el programa
                        new Ahorcado_AngelV().setVisible(true);
                    } else {
                        System.exit(0);
                    }
                }
            }
        }


    }//GEN-LAST:event_AActionPerformed
    //El resto de botones son iguales pero con su letra
    private void BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BActionPerformed
        // TODO add your handling code here:
        B.setEnabled(false);
        for (int i = 0; i < tamaño; i++) {
            if (palabramisteriosa[i] == 'B') {
                guiones[i] = "B";
                PalabraSecreta.setText(Arrays.toString(guiones));
                ganar++;
            }

        }
        if (palabrasecreta.contains("B")) {
            puntuacion++;
            Puntuacion.setText(puntuacion + "");

            if (ganar == tamañov2) {
                this.dispose();
                respuesta = (JOptionPane.showConfirmDialog(null, "YOU WIN, PLAY AGAIN?", "YOU WIN, PLAY AGAIN?", JOptionPane.YES_NO_OPTION));
                if (respuesta == 0) {
                    new Ahorcado_AngelV().setVisible(true);
                } else {
                    System.exit(0);
                }

            }
        } else {
            puntuacion -= 3;
            fallos++;
            letrasfallidas.append("B");
            LetrasFallidas.setText(letrasfallidas + "");
            Puntuacion.setText(puntuacion + "");
            switch (fallos) {
                case 1 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado2.png")));
                case 2 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado3.png")));
                case 3 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado4.png")));
                case 4 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado5.png")));
                case 5 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado6.png")));
                case 6 -> {
                    this.dispose();
                    respuesta = (JOptionPane.showConfirmDialog(null, "LOOSER\nPLAY AGAIN?", "THE WORD WAS: " + palabrasecreta, JOptionPane.YES_NO_OPTION));
                    if (respuesta == 0) {
                        new Ahorcado_AngelV().setVisible(true);
                    } else {
                        System.exit(0);
                    }
                }
            }
        }
    }//GEN-LAST:event_BActionPerformed

    private void CActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CActionPerformed
        // TODO add your handling code here:
        C.setEnabled(false);
        for (int i = 0; i < tamaño; i++) {
            if (palabramisteriosa[i] == 'C') {
                guiones[i] = "C";
                PalabraSecreta.setText(Arrays.toString(guiones));
                ganar++;
            }

        }
        if (palabrasecreta.contains("C")) {
            puntuacion++;
            Puntuacion.setText(puntuacion + "");

            if (ganar == tamañov2) {
                this.dispose();
                respuesta = (JOptionPane.showConfirmDialog(null, "YOU WIN, PLAY AGAIN?", "YOU WIN, PLAY AGAIN?", JOptionPane.YES_NO_OPTION));
                if (respuesta == 0) {
                    new Ahorcado_AngelV().setVisible(true);
                } else {
                    System.exit(0);
                }

            }
        } else {
            puntuacion -= 3;
            fallos++;
            letrasfallidas.append("C");
            LetrasFallidas.setText(letrasfallidas + "");
            Puntuacion.setText(puntuacion + "");
            switch (fallos) {
                case 1 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado2.png")));
                case 2 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado3.png")));
                case 3 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado4.png")));
                case 4 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado5.png")));
                case 5 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado6.png")));
                case 6 -> {
                    this.dispose();
                    respuesta = (JOptionPane.showConfirmDialog(null, "LOOSER\nPLAY AGAIN?", "THE WORD WAS: " + palabrasecreta, JOptionPane.YES_NO_OPTION));
                    if (respuesta == 0) {
                        new Ahorcado_AngelV().setVisible(true);
                    } else {
                        System.exit(0);
                    }
                }
            }
        }
    }//GEN-LAST:event_CActionPerformed

    private void DActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DActionPerformed
        // TODO add your handling code here:
        D.setEnabled(false);
        for (int i = 0; i < tamaño; i++) {
            if (palabramisteriosa[i] == 'D') {
                guiones[i] = "D";
                PalabraSecreta.setText(Arrays.toString(guiones));
                ganar++;
            }

        }
        if (palabrasecreta.contains("D")) {
            puntuacion++;
            Puntuacion.setText(puntuacion + "");

            if (ganar == tamañov2) {
                this.dispose();
                respuesta = (JOptionPane.showConfirmDialog(null, "YOU WIN, PLAY AGAIN?", "YOU WIN, PLAY AGAIN?", JOptionPane.YES_NO_OPTION));
                if (respuesta == 0) {
                    new Ahorcado_AngelV().setVisible(true);
                } else {
                    System.exit(0);
                }

            }
        } else {
            puntuacion -= 3;
            fallos++;
            letrasfallidas.append("D");
            LetrasFallidas.setText(letrasfallidas + "");
            Puntuacion.setText(puntuacion + "");
            switch (fallos) {
                case 1 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado2.png")));
                case 2 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado3.png")));
                case 3 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado4.png")));
                case 4 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado5.png")));
                case 5 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado6.png")));
                case 6 -> {
                    this.dispose();
                    respuesta = (JOptionPane.showConfirmDialog(null, "LOOSER\nPLAY AGAIN?", "THE WORD WAS: " + palabrasecreta, JOptionPane.YES_NO_OPTION));
                    if (respuesta == 0) {
                        new Ahorcado_AngelV().setVisible(true);
                    } else {
                        System.exit(0);
                    }
                }
            }
        }
    }//GEN-LAST:event_DActionPerformed

    private void EActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EActionPerformed
        // TODO add your handling code here:
        E.setEnabled(false);
        for (int i = 0; i < tamaño; i++) {
            if (palabramisteriosa[i] == 'E') {
                guiones[i] = "E";
                PalabraSecreta.setText(Arrays.toString(guiones));
                ganar++;
            }

        }
        if (palabrasecreta.contains("E")) {
            puntuacion++;
            Puntuacion.setText(puntuacion + "");

            if (ganar == tamañov2) {
                this.dispose();
                respuesta = (JOptionPane.showConfirmDialog(null, "YOU WIN, PLAY AGAIN?", "YOU WIN, PLAY AGAIN?", JOptionPane.YES_NO_OPTION));
                if (respuesta == 0) {
                    new Ahorcado_AngelV().setVisible(true);
                } else {
                    System.exit(0);
                }

            }
        } else {
            puntuacion -= 3;
            fallos++;
            letrasfallidas.append("E");
            LetrasFallidas.setText(letrasfallidas + "");
            Puntuacion.setText(puntuacion + "");
            switch (fallos) {
                case 1 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado2.png")));
                case 2 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado3.png")));
                case 3 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado4.png")));
                case 4 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado5.png")));
                case 5 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado6.png")));
                case 6 -> {
                    this.dispose();
                    respuesta = (JOptionPane.showConfirmDialog(null, "LOOSER\nPLAY AGAIN?", "THE WORD WAS: " + palabrasecreta, JOptionPane.YES_NO_OPTION));
                    if (respuesta == 0) {
                        new Ahorcado_AngelV().setVisible(true);
                    } else {
                        System.exit(0);
                    }
                }
            }
        }
    }//GEN-LAST:event_EActionPerformed

    private void FActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FActionPerformed
        // TODO add your handling code here:
        F.setEnabled(false);
        for (int i = 0; i < tamaño; i++) {
            if (palabramisteriosa[i] == 'F') {
                guiones[i] = "F";
                PalabraSecreta.setText(Arrays.toString(guiones));
                ganar++;
            }

        }
        if (palabrasecreta.contains("F")) {
            puntuacion++;
            Puntuacion.setText(puntuacion + "");

            if (ganar == tamañov2) {
                this.dispose();
                respuesta = (JOptionPane.showConfirmDialog(null, "YOU WIN, PLAY AGAIN?", "YOU WIN, PLAY AGAIN?", JOptionPane.YES_NO_OPTION));
                if (respuesta == 0) {
                    new Ahorcado_AngelV().setVisible(true);
                } else {
                    System.exit(0);
                }

            }
        } else {
            puntuacion -= 3;
            fallos++;
            letrasfallidas.append("F");
            LetrasFallidas.setText(letrasfallidas + "");
            Puntuacion.setText(puntuacion + "");
            switch (fallos) {
                case 1 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado2.png")));
                case 2 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado3.png")));
                case 3 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado4.png")));
                case 4 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado5.png")));
                case 5 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado6.png")));
                case 6 -> {
                    this.dispose();
                    respuesta = (JOptionPane.showConfirmDialog(null, "LOOSER\nPLAY AGAIN?", "THE WORD WAS: " + palabrasecreta, JOptionPane.YES_NO_OPTION));
                    if (respuesta == 0) {
                        new Ahorcado_AngelV().setVisible(true);
                    } else {
                        System.exit(0);
                    }
                }
            }
        }
    }//GEN-LAST:event_FActionPerformed

    private void GActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GActionPerformed
        // TODO add your handling code here:
        G.setEnabled(false);
        for (int i = 0; i < tamaño; i++) {
            if (palabramisteriosa[i] == 'G') {
                guiones[i] = "G";
                PalabraSecreta.setText(Arrays.toString(guiones));
                ganar++;
            }

        }
        if (palabrasecreta.contains("G")) {
            puntuacion++;
            Puntuacion.setText(puntuacion + "");

            if (ganar == tamañov2) {
                this.dispose();
                respuesta = (JOptionPane.showConfirmDialog(null, "YOU WIN, PLAY AGAIN?", "YOU WIN, PLAY AGAIN?", JOptionPane.YES_NO_OPTION));
                if (respuesta == 0) {
                    new Ahorcado_AngelV().setVisible(true);
                } else {
                    System.exit(0);
                }

            }
        } else {
            puntuacion -= 3;
            fallos++;
            letrasfallidas.append("G");
            LetrasFallidas.setText(letrasfallidas + "");
            Puntuacion.setText(puntuacion + "");
            switch (fallos) {
                case 1 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado2.png")));
                case 2 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado3.png")));
                case 3 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado4.png")));
                case 4 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado5.png")));
                case 5 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado6.png")));
                case 6 -> {
                    this.dispose();
                    respuesta = (JOptionPane.showConfirmDialog(null, "LOOSER\nPLAY AGAIN?", "THE WORD WAS: " + palabrasecreta, JOptionPane.YES_NO_OPTION));
                    if (respuesta == 0) {
                        new Ahorcado_AngelV().setVisible(true);
                    } else {
                        System.exit(0);
                    }
                }
            }
        }
    }//GEN-LAST:event_GActionPerformed

    private void HActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HActionPerformed
        // TODO add your handling code here:
        H.setEnabled(false);
        for (int i = 0; i < tamaño; i++) {
            if (palabramisteriosa[i] == 'H') {
                guiones[i] = "H";
                PalabraSecreta.setText(Arrays.toString(guiones));
                ganar++;
            }

        }
        if (palabrasecreta.contains("H")) {
            puntuacion++;
            Puntuacion.setText(puntuacion + "");

            if (ganar == tamañov2) {
                this.dispose();
                respuesta = (JOptionPane.showConfirmDialog(null, "YOU WIN, PLAY AGAIN?", "YOU WIN, PLAY AGAIN?", JOptionPane.YES_NO_OPTION));
                if (respuesta == 0) {
                    new Ahorcado_AngelV().setVisible(true);
                } else {
                    System.exit(0);
                }

            }
        } else {
            puntuacion -= 3;
            fallos++;
            letrasfallidas.append("H");
            LetrasFallidas.setText(letrasfallidas + "");
            Puntuacion.setText(puntuacion + "");
            switch (fallos) {
                case 1 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado2.png")));
                case 2 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado3.png")));
                case 3 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado4.png")));
                case 4 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado5.png")));
                case 5 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado6.png")));
                case 6 -> {
                    this.dispose();
                    respuesta = (JOptionPane.showConfirmDialog(null, "LOOSER\nPLAY AGAIN?", "THE WORD WAS: " + palabrasecreta, JOptionPane.YES_NO_OPTION));
                    if (respuesta == 0) {
                        new Ahorcado_AngelV().setVisible(true);
                    } else {
                        System.exit(0);
                    }
                }
            }
        }
    }//GEN-LAST:event_HActionPerformed

    private void IActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IActionPerformed
        // TODO add your handling code here:
        I.setEnabled(false);
        for (int i = 0; i < tamaño; i++) {
            if (palabramisteriosa[i] == 'I') {
                guiones[i] = "I";
                PalabraSecreta.setText(Arrays.toString(guiones));
                ganar++;
            }

        }
        if (palabrasecreta.contains("I")) {
            puntuacion++;
            Puntuacion.setText(puntuacion + "");

            if (ganar == tamañov2) {
                this.dispose();
                respuesta = (JOptionPane.showConfirmDialog(null, "YOU WIN, PLAY AGAIN?", "YOU WIN, PLAY AGAIN?", JOptionPane.YES_NO_OPTION));
                if (respuesta == 0) {
                    new Ahorcado_AngelV().setVisible(true);
                } else {
                    System.exit(0);
                }

            }
        } else {
            puntuacion -= 3;
            fallos++;
            letrasfallidas.append("I");
            LetrasFallidas.setText(letrasfallidas + "");
            Puntuacion.setText(puntuacion + "");
            switch (fallos) {
                case 1 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado2.png")));
                case 2 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado3.png")));
                case 3 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado4.png")));
                case 4 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado5.png")));
                case 5 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado6.png")));
                case 6 -> {
                    this.dispose();
                    respuesta = (JOptionPane.showConfirmDialog(null, "LOOSER\nPLAY AGAIN?", "THE WORD WAS: " + palabrasecreta, JOptionPane.YES_NO_OPTION));
                    if (respuesta == 0) {
                        new Ahorcado_AngelV().setVisible(true);
                    } else {
                        System.exit(0);
                    }
                }
            }
        }
    }//GEN-LAST:event_IActionPerformed

    private void JActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JActionPerformed
        // TODO add your handling code here:
        J.setEnabled(false);
        for (int i = 0; i < tamaño; i++) {
            if (palabramisteriosa[i] == 'J') {
                guiones[i] = "J";
                PalabraSecreta.setText(Arrays.toString(guiones));
                ganar++;
            }

        }
        if (palabrasecreta.contains("J")) {
            puntuacion++;
            Puntuacion.setText(puntuacion + "");

            if (ganar == tamañov2) {
                this.dispose();
                respuesta = (JOptionPane.showConfirmDialog(null, "YOU WIN, PLAY AGAIN?", "YOU WIN, PLAY AGAIN?", JOptionPane.YES_NO_OPTION));
                if (respuesta == 0) {
                    new Ahorcado_AngelV().setVisible(true);
                } else {
                    System.exit(0);
                }

            }
        } else {
            puntuacion -= 3;
            fallos++;
            letrasfallidas.append("J");
            LetrasFallidas.setText(letrasfallidas + "");
            Puntuacion.setText(puntuacion + "");
            switch (fallos) {
                case 1 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado2.png")));
                case 2 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado3.png")));
                case 3 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado4.png")));
                case 4 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado5.png")));
                case 5 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado6.png")));
                case 6 -> {
                    this.dispose();
                    respuesta = (JOptionPane.showConfirmDialog(null, "LOOSER\nPLAY AGAIN?", "THE WORD WAS: " + palabrasecreta, JOptionPane.YES_NO_OPTION));
                    if (respuesta == 0) {
                        new Ahorcado_AngelV().setVisible(true);
                    } else {
                        System.exit(0);
                    }
                }
            }
        }
    }//GEN-LAST:event_JActionPerformed

    private void KActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KActionPerformed
        // TODO add your handling code here:
        K.setEnabled(false);
        for (int i = 0; i < tamaño; i++) {
            if (palabramisteriosa[i] == 'K') {
                guiones[i] = "K";
                PalabraSecreta.setText(Arrays.toString(guiones));
                ganar++;
            }

        }
        if (palabrasecreta.contains("K")) {
            puntuacion++;
            Puntuacion.setText(puntuacion + "");

            if (ganar == tamañov2) {
                this.dispose();
                respuesta = (JOptionPane.showConfirmDialog(null, "YOU WIN, PLAY AGAIN?", "YOU WIN, PLAY AGAIN?", JOptionPane.YES_NO_OPTION));
                if (respuesta == 0) {
                    new Ahorcado_AngelV().setVisible(true);
                } else {
                    System.exit(0);
                }

            }
        } else {
            puntuacion -= 3;
            fallos++;
            letrasfallidas.append("K");
            LetrasFallidas.setText(letrasfallidas + "");
            Puntuacion.setText(puntuacion + "");
            switch (fallos) {
                case 1 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado2.png")));
                case 2 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado3.png")));
                case 3 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado4.png")));
                case 4 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado5.png")));
                case 5 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado6.png")));
                case 6 -> {
                    this.dispose();
                    respuesta = (JOptionPane.showConfirmDialog(null, "LOOSER\nPLAY AGAIN?", "THE WORD WAS: " + palabrasecreta, JOptionPane.YES_NO_OPTION));
                    if (respuesta == 0) {
                        new Ahorcado_AngelV().setVisible(true);
                    } else {
                        System.exit(0);
                    }
                }
            }
        }
    }//GEN-LAST:event_KActionPerformed

    private void LActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LActionPerformed
        // TODO add your handling code here:
        L.setEnabled(false);
        for (int i = 0; i < tamaño; i++) {
            if (palabramisteriosa[i] == 'L') {
                guiones[i] = "L";
                PalabraSecreta.setText(Arrays.toString(guiones));
                ganar++;
            }

        }
        if (palabrasecreta.contains("L")) {
            puntuacion++;
            Puntuacion.setText(puntuacion + "");

            if (ganar == tamañov2) {
                this.dispose();
                respuesta = (JOptionPane.showConfirmDialog(null, "YOU WIN, PLAY AGAIN?", "YOU WIN, PLAY AGAIN?", JOptionPane.YES_NO_OPTION));
                if (respuesta == 0) {
                    new Ahorcado_AngelV().setVisible(true);
                } else {
                    System.exit(0);
                }

            }
        } else {
            puntuacion -= 3;
            fallos++;
            letrasfallidas.append("L");
            LetrasFallidas.setText(letrasfallidas + "");
            Puntuacion.setText(puntuacion + "");
            switch (fallos) {
                case 1 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado2.png")));
                case 2 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado3.png")));
                case 3 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado4.png")));
                case 4 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado5.png")));
                case 5 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado6.png")));
                case 6 -> {
                    this.dispose();
                    respuesta = (JOptionPane.showConfirmDialog(null, "LOOSER\nPLAY AGAIN?", "THE WORD WAS: " + palabrasecreta, JOptionPane.YES_NO_OPTION));
                    if (respuesta == 0) {
                        new Ahorcado_AngelV().setVisible(true);
                    } else {
                        System.exit(0);
                    }
                }
            }
        }
    }//GEN-LAST:event_LActionPerformed

    private void MActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MActionPerformed
        // TODO add your handling code here:
        M.setEnabled(false);
        for (int i = 0; i < tamaño; i++) {
            if (palabramisteriosa[i] == 'M') {
                guiones[i] = "M";
                PalabraSecreta.setText(Arrays.toString(guiones));
                ganar++;
            }

        }
        if (palabrasecreta.contains("M")) {
            puntuacion++;
            Puntuacion.setText(puntuacion + "");

            if (ganar == tamañov2) {
                this.dispose();
                respuesta = (JOptionPane.showConfirmDialog(null, "YOU WIN, PLAY AGAIN?", "YOU WIN, PLAY AGAIN?", JOptionPane.YES_NO_OPTION));
                if (respuesta == 0) {
                    new Ahorcado_AngelV().setVisible(true);
                } else {
                    System.exit(0);
                }

            }
        } else {
            puntuacion -= 3;
            fallos++;
            letrasfallidas.append("M");
            LetrasFallidas.setText(letrasfallidas + "");
            Puntuacion.setText(puntuacion + "");
            switch (fallos) {
                case 1 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado2.png")));
                case 2 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado3.png")));
                case 3 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado4.png")));
                case 4 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado5.png")));
                case 5 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado6.png")));
                case 6 -> {
                    this.dispose();
                    respuesta = (JOptionPane.showConfirmDialog(null, "LOOSER\nPLAY AGAIN?", "THE WORD WAS: " + palabrasecreta, JOptionPane.YES_NO_OPTION));
                    if (respuesta == 0) {
                        new Ahorcado_AngelV().setVisible(true);
                    } else {
                        System.exit(0);
                    }
                }
            }
        }
    }//GEN-LAST:event_MActionPerformed

    private void NActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NActionPerformed
        // TODO add your handling code here:
        N.setEnabled(false);
        for (int i = 0; i < tamaño; i++) {
            if (palabramisteriosa[i] == 'N') {
                guiones[i] = "N";
                PalabraSecreta.setText(Arrays.toString(guiones));
                ganar++;
            }

        }
        if (palabrasecreta.contains("N")) {
            puntuacion++;
            Puntuacion.setText(puntuacion + "");

            if (ganar == tamañov2) {
                this.dispose();
                respuesta = (JOptionPane.showConfirmDialog(null, "YOU WIN, PLAY AGAIN?", "YOU WIN, PLAY AGAIN?", JOptionPane.YES_NO_OPTION));
                if (respuesta == 0) {
                    new Ahorcado_AngelV().setVisible(true);
                } else {
                    System.exit(0);
                }

            }
        } else {
            puntuacion -= 3;
            fallos++;
            letrasfallidas.append("N");
            LetrasFallidas.setText(letrasfallidas + "");
            Puntuacion.setText(puntuacion + "");
            switch (fallos) {
                case 1 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado2.png")));
                case 2 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado3.png")));
                case 3 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado4.png")));
                case 4 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado5.png")));
                case 5 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado6.png")));
                case 6 -> {
                    this.dispose();
                    respuesta = (JOptionPane.showConfirmDialog(null, "LOOSER\nPLAY AGAIN?", "THE WORD WAS: " + palabrasecreta, JOptionPane.YES_NO_OPTION));
                    if (respuesta == 0) {
                        new Ahorcado_AngelV().setVisible(true);
                    } else {
                        System.exit(0);
                    }
                }
            }
        }
    }//GEN-LAST:event_NActionPerformed

    private void OActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OActionPerformed
        // TODO add your handling code here:
        O.setEnabled(false);
        for (int i = 0; i < tamaño; i++) {
            if (palabramisteriosa[i] == 'O') {
                guiones[i] = "O";
                PalabraSecreta.setText(Arrays.toString(guiones));
                ganar++;
            }

        }
        if (palabrasecreta.contains("O")) {
            puntuacion++;
            Puntuacion.setText(puntuacion + "");

            if (ganar == tamañov2) {
                this.dispose();
                respuesta = (JOptionPane.showConfirmDialog(null, "YOU WIN, PLAY AGAIN?", "YOU WIN, PLAY AGAIN?", JOptionPane.YES_NO_OPTION));
                if (respuesta == 0) {
                    new Ahorcado_AngelV().setVisible(true);
                } else {
                    System.exit(0);
                }

            }
        } else {
            puntuacion -= 3;
            fallos++;
            letrasfallidas.append("O");
            LetrasFallidas.setText(letrasfallidas + "");
            Puntuacion.setText(puntuacion + "");
            switch (fallos) {
                case 1 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado2.png")));
                case 2 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado3.png")));
                case 3 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado4.png")));
                case 4 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado5.png")));
                case 5 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado6.png")));
                case 6 -> {
                    this.dispose();
                    respuesta = (JOptionPane.showConfirmDialog(null, "LOOSER\nPLAY AGAIN?", "THE WORD WAS: " + palabrasecreta, JOptionPane.YES_NO_OPTION));
                    if (respuesta == 0) {
                        new Ahorcado_AngelV().setVisible(true);
                    } else {
                        System.exit(0);
                    }
                }
            }
        }
    }//GEN-LAST:event_OActionPerformed

    private void PActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PActionPerformed
        // TODO add your handling code here:
        P.setEnabled(false);
        for (int i = 0; i < tamaño; i++) {
            if (palabramisteriosa[i] == 'P') {
                guiones[i] = "P";
                PalabraSecreta.setText(Arrays.toString(guiones));
                ganar++;
            }

        }
        if (palabrasecreta.contains("P")) {
            puntuacion++;
            Puntuacion.setText(puntuacion + "");

            if (ganar == tamañov2) {
                this.dispose();
                respuesta = (JOptionPane.showConfirmDialog(null, "YOU WIN, PLAY AGAIN?", "YOU WIN, PLAY AGAIN?", JOptionPane.YES_NO_OPTION));
                if (respuesta == 0) {
                    new Ahorcado_AngelV().setVisible(true);
                } else {
                    System.exit(0);
                }

            }
        } else {
            puntuacion -= 3;
            fallos++;
            letrasfallidas.append("P");
            LetrasFallidas.setText(letrasfallidas + "");
            Puntuacion.setText(puntuacion + "");
            switch (fallos) {
                case 1 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado2.png")));
                case 2 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado3.png")));
                case 3 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado4.png")));
                case 4 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado5.png")));
                case 5 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado6.png")));
                case 6 -> {
                    this.dispose();
                    respuesta = (JOptionPane.showConfirmDialog(null, "LOOSER\nPLAY AGAIN?", "THE WORD WAS: " + palabrasecreta, JOptionPane.YES_NO_OPTION));
                    if (respuesta == 0) {
                        new Ahorcado_AngelV().setVisible(true);
                    } else {
                        System.exit(0);
                    }
                }
            }
        }
    }//GEN-LAST:event_PActionPerformed

    private void UActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UActionPerformed
        // TODO add your handling code here:
        U.setEnabled(false);
        for (int i = 0; i < tamaño; i++) {
            if (palabramisteriosa[i] == 'U') {
                guiones[i] = "U";
                PalabraSecreta.setText(Arrays.toString(guiones));
                ganar++;
            }

        }
        if (palabrasecreta.contains("U")) {
            puntuacion++;
            Puntuacion.setText(puntuacion + "");

            if (ganar == tamañov2) {
                this.dispose();
                respuesta = (JOptionPane.showConfirmDialog(null, "YOU WIN, PLAY AGAIN?", "YOU WIN, PLAY AGAIN?", JOptionPane.YES_NO_OPTION));
                if (respuesta == 0) {
                    new Ahorcado_AngelV().setVisible(true);
                } else {
                    System.exit(0);
                }

            }
        } else {
            puntuacion -= 3;
            fallos++;
            letrasfallidas.append("U");
            LetrasFallidas.setText(letrasfallidas + "");
            Puntuacion.setText(puntuacion + "");
            switch (fallos) {
                case 1 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado2.png")));
                case 2 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado3.png")));
                case 3 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado4.png")));
                case 4 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado5.png")));
                case 5 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado6.png")));
                case 6 -> {
                    this.dispose();
                    respuesta = (JOptionPane.showConfirmDialog(null, "LOOSER\nPLAY AGAIN?", "THE WORD WAS: " + palabrasecreta, JOptionPane.YES_NO_OPTION));
                    if (respuesta == 0) {
                        new Ahorcado_AngelV().setVisible(true);
                    } else {
                        System.exit(0);
                    }
                }
            }
        }
    }//GEN-LAST:event_UActionPerformed

    private void QActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QActionPerformed
        // TODO add your handling code here:
        Q.setEnabled(false);
        for (int i = 0; i < tamaño; i++) {
            if (palabramisteriosa[i] == 'Q') {
                guiones[i] = "Q";
                PalabraSecreta.setText(Arrays.toString(guiones));
                ganar++;
            }

        }
        if (palabrasecreta.contains("Q")) {
            puntuacion++;
            Puntuacion.setText(puntuacion + "");

            if (ganar == tamañov2) {
                this.dispose();
                respuesta = (JOptionPane.showConfirmDialog(null, "YOU WIN, PLAY AGAIN?", "YOU WIN, PLAY AGAIN?", JOptionPane.YES_NO_OPTION));
                if (respuesta == 0) {
                    new Ahorcado_AngelV().setVisible(true);
                } else {
                    System.exit(0);
                }

            }
        } else {
            puntuacion -= 3;
            fallos++;
            letrasfallidas.append("Q");
            LetrasFallidas.setText(letrasfallidas + "");
            Puntuacion.setText(puntuacion + "");
            switch (fallos) {
                case 1 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado2.png")));
                case 2 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado3.png")));
                case 3 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado4.png")));
                case 4 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado5.png")));
                case 5 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado6.png")));
                case 6 -> {
                    this.dispose();
                    respuesta = (JOptionPane.showConfirmDialog(null, "LOOSER\nPLAY AGAIN?", "THE WORD WAS: " + palabrasecreta, JOptionPane.YES_NO_OPTION));
                    if (respuesta == 0) {
                        new Ahorcado_AngelV().setVisible(true);
                    } else {
                        System.exit(0);
                    }
                }
            }
        }
    }//GEN-LAST:event_QActionPerformed

    private void TActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TActionPerformed
        // TODO add your handling code here:
        T.setEnabled(false);
        for (int i = 0; i < tamaño; i++) {
            if (palabramisteriosa[i] == 'T') {
                guiones[i] = "T";
                PalabraSecreta.setText(Arrays.toString(guiones));
                ganar++;
            }

        }
        if (palabrasecreta.contains("T")) {
            puntuacion++;
            Puntuacion.setText(puntuacion + "");

            if (ganar == tamañov2) {
                this.dispose();
                respuesta = (JOptionPane.showConfirmDialog(null, "YOU WIN, PLAY AGAIN?", "YOU WIN, PLAY AGAIN?", JOptionPane.YES_NO_OPTION));
                if (respuesta == 0) {
                    new Ahorcado_AngelV().setVisible(true);
                } else {
                    System.exit(0);
                }

            }
        } else {
            puntuacion -= 3;
            fallos++;
            letrasfallidas.append("T");
            LetrasFallidas.setText(letrasfallidas + "");
            Puntuacion.setText(puntuacion + "");
            switch (fallos) {
                case 1 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado2.png")));
                case 2 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado3.png")));
                case 3 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado4.png")));
                case 4 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado5.png")));
                case 5 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado6.png")));
                case 6 -> {
                    this.dispose();
                    respuesta = (JOptionPane.showConfirmDialog(null, "LOOSER\nPLAY AGAIN?", "THE WORD WAS: " + palabrasecreta, JOptionPane.YES_NO_OPTION));
                    if (respuesta == 0) {
                        new Ahorcado_AngelV().setVisible(true);
                    } else {
                        System.exit(0);
                    }
                }
            }
        }
    }//GEN-LAST:event_TActionPerformed

    private void SActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SActionPerformed
        // TODO add your handling code here:
        S.setEnabled(false);
        for (int i = 0; i < tamaño; i++) {
            if (palabramisteriosa[i] == 'S') {
                guiones[i] = "S";
                PalabraSecreta.setText(Arrays.toString(guiones));
                ganar++;
            }

        }
        if (palabrasecreta.contains("S")) {
            puntuacion++;
            Puntuacion.setText(puntuacion + "");

            if (ganar == tamañov2) {
                this.dispose();
                respuesta = (JOptionPane.showConfirmDialog(null, "YOU WIN, PLAY AGAIN?", "YOU WIN, PLAY AGAIN?", JOptionPane.YES_NO_OPTION));
                if (respuesta == 0) {
                    new Ahorcado_AngelV().setVisible(true);
                } else {
                    System.exit(0);
                }

            }
        } else {
            puntuacion -= 3;
            fallos++;
            letrasfallidas.append("S");
            LetrasFallidas.setText(letrasfallidas + "");
            Puntuacion.setText(puntuacion + "");
            switch (fallos) {
                case 1 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado2.png")));
                case 2 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado3.png")));
                case 3 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado4.png")));
                case 4 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado5.png")));
                case 5 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado6.png")));
                case 6 -> {
                    this.dispose();
                    respuesta = (JOptionPane.showConfirmDialog(null, "LOOSER\nPLAY AGAIN?", "THE WORD WAS: " + palabrasecreta, JOptionPane.YES_NO_OPTION));
                    if (respuesta == 0) {
                        new Ahorcado_AngelV().setVisible(true);
                    } else {
                        System.exit(0);
                    }
                }
            }
        }
    }//GEN-LAST:event_SActionPerformed

    private void YActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YActionPerformed
        // TODO add your handling code here:
        Y.setEnabled(false);
        for (int i = 0; i < tamaño; i++) {
            if (palabramisteriosa[i] == 'Y') {
                guiones[i] = "Y";
                PalabraSecreta.setText(Arrays.toString(guiones));
                ganar++;
            }

        }
        if (palabrasecreta.contains("Y")) {
            puntuacion++;
            Puntuacion.setText(puntuacion + "");

            if (ganar == tamañov2) {
                this.dispose();
                respuesta = (JOptionPane.showConfirmDialog(null, "YOU WIN, PLAY AGAIN?", "YOU WIN, PLAY AGAIN?", JOptionPane.YES_NO_OPTION));
                if (respuesta == 0) {
                    new Ahorcado_AngelV().setVisible(true);
                } else {
                    System.exit(0);
                }

            }
        } else {
            puntuacion -= 3;
            fallos++;
            letrasfallidas.append("Y");
            LetrasFallidas.setText(letrasfallidas + "");
            Puntuacion.setText(puntuacion + "");
            switch (fallos) {
                case 1 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado2.png")));
                case 2 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado3.png")));
                case 3 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado4.png")));
                case 4 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado5.png")));
                case 5 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado6.png")));
                case 6 -> {
                    this.dispose();
                    respuesta = (JOptionPane.showConfirmDialog(null, "LOOSER\nPLAY AGAIN?", "THE WORD WAS: " + palabrasecreta, JOptionPane.YES_NO_OPTION));
                    if (respuesta == 0) {
                        new Ahorcado_AngelV().setVisible(true);
                    } else {
                        System.exit(0);
                    }
                }
            }
        }
    }//GEN-LAST:event_YActionPerformed

    private void VActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VActionPerformed
        // TODO add your handling code here:
        V.setEnabled(false);
        for (int i = 0; i < tamaño; i++) {
            if (palabramisteriosa[i] == 'V') {
                guiones[i] = "V";
                PalabraSecreta.setText(Arrays.toString(guiones));
                ganar++;
            }

        }
        if (palabrasecreta.contains("V")) {
            puntuacion++;
            Puntuacion.setText(puntuacion + "");

            if (ganar == tamañov2) {
                this.dispose();
                respuesta = (JOptionPane.showConfirmDialog(null, "YOU WIN, PLAY AGAIN?", "YOU WIN, PLAY AGAIN?", JOptionPane.YES_NO_OPTION));
                if (respuesta == 0) {
                    new Ahorcado_AngelV().setVisible(true);
                } else {
                    System.exit(0);
                }

            }
        } else {
            puntuacion -= 3;
            fallos++;
            letrasfallidas.append("V");
            LetrasFallidas.setText(letrasfallidas + "");
            Puntuacion.setText(puntuacion + "");
            switch (fallos) {
                case 1 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado2.png")));
                case 2 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado3.png")));
                case 3 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado4.png")));
                case 4 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado5.png")));
                case 5 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado6.png")));
                case 6 -> {
                    this.dispose();
                    respuesta = (JOptionPane.showConfirmDialog(null, "LOOSER\nPLAY AGAIN?", "THE WORD WAS: " + palabrasecreta, JOptionPane.YES_NO_OPTION));
                    if (respuesta == 0) {
                        new Ahorcado_AngelV().setVisible(true);
                    } else {
                        System.exit(0);
                    }
                }
            }
        }
    }//GEN-LAST:event_VActionPerformed

    private void RActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RActionPerformed
        // TODO add your handling code here:
        R.setEnabled(false);
        for (int i = 0; i < tamaño; i++) {
            if (palabramisteriosa[i] == 'R') {
                guiones[i] = "R";
                PalabraSecreta.setText(Arrays.toString(guiones));
                ganar++;
            }

        }
        if (palabrasecreta.contains("R")) {
            puntuacion++;
            Puntuacion.setText(puntuacion + "");

            if (ganar == tamañov2) {
                this.dispose();
                respuesta = (JOptionPane.showConfirmDialog(null, "YOU WIN, PLAY AGAIN?", "YOU WIN, PLAY AGAIN?", JOptionPane.YES_NO_OPTION));
                if (respuesta == 0) {
                    new Ahorcado_AngelV().setVisible(true);
                } else {
                    System.exit(0);
                }

            }
        } else {
            puntuacion -= 3;
            fallos++;
            letrasfallidas.append("R");
            LetrasFallidas.setText(letrasfallidas + "");
            Puntuacion.setText(puntuacion + "");
            switch (fallos) {
                case 1 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado2.png")));
                case 2 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado3.png")));
                case 3 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado4.png")));
                case 4 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado5.png")));
                case 5 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado6.png")));
                case 6 -> {
                    this.dispose();
                    respuesta = (JOptionPane.showConfirmDialog(null, "LOOSER\nPLAY AGAIN?", "THE WORD WAS: " + palabrasecreta, JOptionPane.YES_NO_OPTION));
                    if (respuesta == 0) {
                        new Ahorcado_AngelV().setVisible(true);
                    } else {
                        System.exit(0);
                    }
                }
            }
        }
    }//GEN-LAST:event_RActionPerformed

    private void XActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XActionPerformed
        // TODO add your handling code here:
        X.setEnabled(false);
        for (int i = 0; i < tamaño; i++) {
            if (palabramisteriosa[i] == 'X') {
                guiones[i] = "X";
                PalabraSecreta.setText(Arrays.toString(guiones));
                ganar++;
            }

        }
        if (palabrasecreta.contains("X")) {
            puntuacion++;
            Puntuacion.setText(puntuacion + "");

            if (ganar == tamañov2) {
                this.dispose();
                respuesta = (JOptionPane.showConfirmDialog(null, "YOU WIN, PLAY AGAIN?", "YOU WIN, PLAY AGAIN?", JOptionPane.YES_NO_OPTION));
                if (respuesta == 0) {
                    new Ahorcado_AngelV().setVisible(true);
                } else {
                    System.exit(0);
                }

            }
        } else {
            puntuacion -= 3;
            fallos++;
            letrasfallidas.append("X");
            LetrasFallidas.setText(letrasfallidas + "");
            Puntuacion.setText(puntuacion + "");
            switch (fallos) {
                case 1 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado2.png")));
                case 2 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado3.png")));
                case 3 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado4.png")));
                case 4 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado5.png")));
                case 5 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado6.png")));
                case 6 -> {
                    this.dispose();
                    respuesta = (JOptionPane.showConfirmDialog(null, "LOOSER\nPLAY AGAIN?", "THE WORD WAS: " + palabrasecreta, JOptionPane.YES_NO_OPTION));
                    if (respuesta == 0) {
                        new Ahorcado_AngelV().setVisible(true);
                    } else {
                        System.exit(0);
                    }
                }
            }
        }
    }//GEN-LAST:event_XActionPerformed

    private void ZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZActionPerformed
        // TODO add your handling code here:
        Z.setEnabled(false);
        for (int i = 0; i < tamaño; i++) {
            if (palabramisteriosa[i] == 'Z') {
                guiones[i] = "Z";
                PalabraSecreta.setText(Arrays.toString(guiones));
                ganar++;
            }

        }
        if (palabrasecreta.contains("Z")) {
            puntuacion++;
            Puntuacion.setText(puntuacion + "");

            if (ganar == tamañov2) {
                this.dispose();
                respuesta = (JOptionPane.showConfirmDialog(null, "YOU WIN, PLAY AGAIN?", "YOU WIN, PLAY AGAIN?", JOptionPane.YES_NO_OPTION));
                if (respuesta == 0) {
                    new Ahorcado_AngelV().setVisible(true);
                } else {
                    System.exit(0);
                }

            }
        } else {
            puntuacion -= 3;
            fallos++;
            letrasfallidas.append("Z");
            LetrasFallidas.setText(letrasfallidas + "");
            Puntuacion.setText(puntuacion + "");
            switch (fallos) {
                case 1 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado2.png")));
                case 2 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado3.png")));
                case 3 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado4.png")));
                case 4 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado5.png")));
                case 5 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado6.png")));
                case 6 -> {
                    this.dispose();
                    respuesta = (JOptionPane.showConfirmDialog(null, "LOOSER\nPLAY AGAIN?", "THE WORD WAS: " + palabrasecreta, JOptionPane.YES_NO_OPTION));
                    if (respuesta == 0) {
                        new Ahorcado_AngelV().setVisible(true);
                    } else {
                        System.exit(0);
                    }
                }
            }
        }
    }//GEN-LAST:event_ZActionPerformed

    private void WActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WActionPerformed
        // TODO add your handling code here:
        W.setEnabled(false);
        for (int i = 0; i < tamaño; i++) {
            if (palabramisteriosa[i] == 'W') {
                guiones[i] = "W";
                PalabraSecreta.setText(Arrays.toString(guiones));
                ganar++;
            }

        }
        if (palabrasecreta.contains("W")) {
            puntuacion++;
            Puntuacion.setText(puntuacion + "");

            if (ganar == tamañov2) {
                this.dispose();
                respuesta = (JOptionPane.showConfirmDialog(null, "YOU WIN, PLAY AGAIN?", "YOU WIN, PLAY AGAIN?", JOptionPane.YES_NO_OPTION));
                if (respuesta == 0) {
                    new Ahorcado_AngelV().setVisible(true);
                } else {
                    System.exit(0);
                }

            }
        } else {
            puntuacion -= 3;
            fallos++;
            letrasfallidas.append("W");
            LetrasFallidas.setText(letrasfallidas + "");
            Puntuacion.setText(puntuacion + "");
            switch (fallos) {
                case 1 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado2.png")));
                case 2 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado3.png")));
                case 3 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado4.png")));
                case 4 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado5.png")));
                case 5 ->
                    Imagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PRG_Ahorcado6.png")));
                case 6 -> {
                    this.dispose();
                    respuesta = (JOptionPane.showConfirmDialog(null, "LOOSER\nPLAY AGAIN?", "THE WORD WAS: " + palabrasecreta, JOptionPane.YES_NO_OPTION));
                    if (respuesta == 0) {
                        new Ahorcado_AngelV().setVisible(true);
                    } else {
                        System.exit(0);
                    }
                }
            }
        }
    }//GEN-LAST:event_WActionPerformed
    //La funcion de este boton es que si el usuario quiere adivinar la palabra entera le da y le saldra un cuadro donde introducirla, pero si falla se acaba el juego
    private void BotonResolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonResolverActionPerformed
        // TODO add your handling code here:
        String intento = JOptionPane.showInputDialog("WHAT IS THE WORD?: ");
        //Si la palabra si que era gana y si no pierde y le saldra igual que antes que si quiere volver a jugar
        if (intento.equalsIgnoreCase(palabrasecreta)) {
            this.dispose();
            respuesta = (JOptionPane.showConfirmDialog(null, "YOU WIN, PLAY AGAIN?", "YOU WIN, PLAY AGAIN?", JOptionPane.YES_NO_OPTION));
            if (respuesta == 0) {
                new Ahorcado_AngelV().setVisible(true);
            } else {
                System.exit(0);
            }
        } else {
            this.dispose();
            respuesta = (JOptionPane.showConfirmDialog(null, "LOOSER\nPLAY AGAIN?", "THE WORD WAS: " + palabrasecreta, JOptionPane.YES_NO_OPTION));
            if (respuesta == 0) {
                new Ahorcado_AngelV().setVisible(true);
            } else {
                System.exit(0);
            }
        }
    }//GEN-LAST:event_BotonResolverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ahorcado_AngelV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ahorcado_AngelV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ahorcado_AngelV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ahorcado_AngelV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ahorcado_AngelV().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton A;
    private javax.swing.JButton B;
    private javax.swing.JButton BotonInstrucciones;
    private javax.swing.JButton BotonPalabra;
    private javax.swing.JButton BotonResolver;
    private javax.swing.JButton C;
    private javax.swing.JLabel CategoriaPalabra;
    private javax.swing.JButton D;
    private javax.swing.JButton E;
    private javax.swing.JButton F;
    private javax.swing.JButton G;
    private javax.swing.JButton H;
    private javax.swing.JButton I;
    private javax.swing.JLabel Imagen;
    private javax.swing.JButton J;
    private javax.swing.JButton K;
    private javax.swing.JButton L;
    private javax.swing.JLabel LetrasFallidas;
    private javax.swing.JButton M;
    private javax.swing.JButton N;
    private javax.swing.JButton O;
    private javax.swing.JButton P;
    private javax.swing.JLabel PalabraSecreta;
    private javax.swing.JLabel Puntuacion;
    private javax.swing.JButton Q;
    private javax.swing.JButton R;
    private javax.swing.JButton S;
    private javax.swing.JButton T;
    private javax.swing.JLabel Texto1;
    private javax.swing.JLabel Texto3;
    private javax.swing.JLabel Texto4;
    private javax.swing.JLabel TextoPuntuacion;
    private javax.swing.JButton U;
    private javax.swing.JButton V;
    private javax.swing.JButton W;
    private javax.swing.JButton X;
    private javax.swing.JButton Y;
    private javax.swing.JButton Z;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
